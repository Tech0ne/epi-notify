services:
  ntfy:
    image: binwiederhier/ntfy
    container_name: ntfy
    environment:
      - NTFY_SERVER=0.0.0.0:80
      - NTFY_DEBUG=false
    volumes:
      - ./data/ntfy/che/:/var/cache/ntfy/
      - ./data/ntfy/cfg/:/etc/ntfy
    networks:
      backend:
        ipv4_address: ${NTFY_HOST}

  notifier:
    build: ./notifier/
    container_name: notifier
    volumes:
      - ./data/db/:/data/
    networks:
      backend:
        ipv4_address: ${NOTIFIER_HOST}

  hook:
    build: ./hooks/
    container_name: hook
    networks:
      backend:
        ipv4_address: ${HOOK_HOST}

  discord-bot:
    build: ./discord/
    container_name: discord-bot
    volumes:
      - ./data/db/:/data/
    environment:
      - DISCORD_BOT_TOKEN=${DISCORD_BOT_TOKEN}
    networks:
      backend:
        ipv4_address: ${BOT_HOST}

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      backend:
        ipv4_address: ${NGINX_HOST}
    depends_on:
      - ntfy
      - hook

  ngrok:
    image: ngrok/ngrok:latest
    container_name: ngrok
    command:
      - "http"
      - "--url=${NGROK_URL}"
      - "http://${NGINX_HOST}:80"
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
    networks:
      backend:
        ipv4_address: ${NGROK_HOST}
    depends_on:
      - nginx
    ports:
      - 80:4040

networks:
  backend:
    driver: bridge
    ipam:
      config:
        - subnet: ${NETWORK_SUBNET}
          gateway: ${NETWORK_GATEWAY}